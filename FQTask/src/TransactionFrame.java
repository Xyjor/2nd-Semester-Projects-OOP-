
import java.util.ArrayList;
import javax.swing.DefaultListModel;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
/**
 *
 * @author Xyjor
 */
public class TransactionFrame extends javax.swing.JFrame {

    private ArrayList<Product> ProductList;
    private StoreFront Store;

    /**
     * Creates new form TransactionFrame
     */
    public TransactionFrame(StoreFront store, ArrayList<Product> products) {
        initComponents();
        this.ProductList = products;
        this.Store = store;
        cmbItemSelection.removeAllItems();
        for (Product product : ProductList) {
            cmbItemSelection.addItem(product.getName());
        }
        PopulateCmb();
    }

    private void PopulateCmb() {
        cmbItemSelection.removeAllItems();
        for (Product product : ProductList) {
            cmbItemSelection.addItem(product.getName());
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        buttonGroup1 = new javax.swing.ButtonGroup();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        btnAddToCart = new javax.swing.JButton();
        btnRemoveItem = new javax.swing.JButton();
        btnClearCart = new javax.swing.JButton();
        btnPay = new javax.swing.JButton();
        btnReturnToFrontStore = new javax.swing.JButton();
        rbtnCash = new javax.swing.JRadioButton();
        rbtnCard = new javax.swing.JRadioButton();
        cmbItemSelection = new javax.swing.JComboBox<>();
        jLabel1 = new javax.swing.JLabel();
        btnEditCart = new javax.swing.JButton();
        btnTotalPayment = new javax.swing.JButton();
        txtfldQuantity = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        jScrollPane2 = new javax.swing.JScrollPane();
        jlistReceipt = new javax.swing.JList<>();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Name", "Quantity", "Price", "Total Price"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(jTable1);

        getContentPane().add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(6, 10, 652, 255));

        btnAddToCart.setText("Add To Cart");
        btnAddToCart.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAddToCartActionPerformed(evt);
            }
        });
        getContentPane().add(btnAddToCart, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 270, 136, 52));

        btnRemoveItem.setText("Remove Item");
        btnRemoveItem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnRemoveItemActionPerformed(evt);
            }
        });
        getContentPane().add(btnRemoveItem, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 330, 136, 52));

        btnClearCart.setText("Clear Cart");
        btnClearCart.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnClearCartActionPerformed(evt);
            }
        });
        getContentPane().add(btnClearCart, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 390, 136, 52));

        btnPay.setText("Pay");
        btnPay.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnPayActionPerformed(evt);
            }
        });
        getContentPane().add(btnPay, new org.netbeans.lib.awtextra.AbsoluteConstraints(520, 410, 136, 52));

        btnReturnToFrontStore.setText("Return To Front Store");
        btnReturnToFrontStore.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnReturnToFrontStoreActionPerformed(evt);
            }
        });
        getContentPane().add(btnReturnToFrontStore, new org.netbeans.lib.awtextra.AbsoluteConstraints(670, 380, 290, 66));

        buttonGroup1.add(rbtnCash);
        rbtnCash.setText("Cash");
        getContentPane().add(rbtnCash, new org.netbeans.lib.awtextra.AbsoluteConstraints(460, 410, -1, -1));

        buttonGroup1.add(rbtnCard);
        rbtnCard.setText("Card");
        rbtnCard.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                rbtnCardActionPerformed(evt);
            }
        });
        getContentPane().add(rbtnCard, new org.netbeans.lib.awtextra.AbsoluteConstraints(460, 440, -1, -1));

        cmbItemSelection.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        cmbItemSelection.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cmbItemSelectionActionPerformed(evt);
            }
        });
        getContentPane().add(cmbItemSelection, new org.netbeans.lib.awtextra.AbsoluteConstraints(511, 269, 147, -1));

        jLabel1.setText("Select an item to purchase:");
        getContentPane().add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(363, 274, -1, -1));

        btnEditCart.setText("Edit Cart");
        btnEditCart.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnEditCartActionPerformed(evt);
            }
        });
        getContentPane().add(btnEditCart, new org.netbeans.lib.awtextra.AbsoluteConstraints(160, 269, 136, 52));

        btnTotalPayment.setText("Total Payment");
        btnTotalPayment.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnTotalPaymentActionPerformed(evt);
            }
        });
        getContentPane().add(btnTotalPayment, new org.netbeans.lib.awtextra.AbsoluteConstraints(520, 350, 136, 52));
        getContentPane().add(txtfldQuantity, new org.netbeans.lib.awtextra.AbsoluteConstraints(510, 306, 147, 30));

        jLabel2.setText("Put Quantity:");
        getContentPane().add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(440, 310, -1, -1));

        jScrollPane2.setViewportView(jlistReceipt);

        getContentPane().add(jScrollPane2, new org.netbeans.lib.awtextra.AbsoluteConstraints(670, 10, 290, 360));

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void rbtnCardActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_rbtnCardActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_rbtnCardActionPerformed

    private void btnReturnToFrontStoreActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnReturnToFrontStoreActionPerformed
        this.dispose();
        Store.setVisible(true);
    }//GEN-LAST:event_btnReturnToFrontStoreActionPerformed

    private void btnAddToCartActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAddToCartActionPerformed
        String selectedProduct = (String) cmbItemSelection.getSelectedItem();
        int quantity;
        try {
            quantity = Integer.parseInt(txtfldQuantity.getText());
        } catch (NumberFormatException e) {
            JOptionPane.showMessageDialog(this, "Enter a valid quantity.", "Error", JOptionPane.ERROR_MESSAGE);
            return;
        }

        Product chosenProduct = null;
        for (Product product : ProductList) {
            if (product.getName().equals(selectedProduct)) {
                chosenProduct = product;
                break;
            }
        }
        if (chosenProduct == null) {
            return;
        }

        DefaultTableModel model = (DefaultTableModel) jTable1.getModel();
        double totalPrice = chosenProduct.getPrice() * quantity;
        model.addRow(new Object[]{chosenProduct.getName(), quantity, chosenProduct.getPrice(), totalPrice});
    }//GEN-LAST:event_btnAddToCartActionPerformed

    private void btnRemoveItemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnRemoveItemActionPerformed
        try {
            javax.swing.table.DefaultTableModel model = (javax.swing.table.DefaultTableModel) jTable1.getModel();
            int selectedRow = jTable1.getSelectedRow(); // Get selected row index

            if (selectedRow == -1) { // No row selected
                JOptionPane.showMessageDialog(this, "Please select an item to delete.", "Warning", JOptionPane.WARNING_MESSAGE);
                return;
            }

            // Confirm deletion
            int confirm = JOptionPane.showConfirmDialog(this, "Are you sure you want to remove this item?", "Confirm", JOptionPane.YES_NO_OPTION);
            if (confirm == JOptionPane.YES_OPTION) {
                model.removeRow(selectedRow); // Remove the selected row
                JOptionPane.showMessageDialog(this, "Item removed from cart.", "Success", JOptionPane.INFORMATION_MESSAGE);
            }
        } catch (Exception e) {
            JOptionPane.showMessageDialog(this, "An error occurred: " + e.getMessage(), "Error", JOptionPane.ERROR_MESSAGE);
        }        // TODO add your handling code here:

    }//GEN-LAST:event_btnRemoveItemActionPerformed

    private void btnClearCartActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnClearCartActionPerformed
        DefaultTableModel model = (DefaultTableModel) jTable1.getModel();
        model.setRowCount(0);
    }//GEN-LAST:event_btnClearCartActionPerformed

    private void btnPayActionPerformed(java.awt.event.ActionEvent evt) {
        DefaultTableModel model = (DefaultTableModel) jTable1.getModel();

        if (model.getRowCount() == 0) {
            JOptionPane.showMessageDialog(this, "Cart is empty!", "Warning", JOptionPane.WARNING_MESSAGE);
            return;
        }

        double grandTotal = 0;
        StringBuilder receipt = new StringBuilder("----- Receipt -----\n");
        receipt.append(String.format("%-15s %-10s %-10s %-10s\n", "Item", "Qty", "Price", "Total"));
        receipt.append("--------------------------------------------------\n");

        for (int i = 0; i < model.getRowCount(); i++) {
            String itemName = model.getValueAt(i, 0).toString();
            String quantity = model.getValueAt(i, 1).toString();
            String price = model.getValueAt(i, 2).toString();
            String totalPrice = model.getValueAt(i, 3).toString();

            receipt.append(String.format("%-15s %-10s %-10s %-10s\n", itemName, quantity, price, totalPrice));

            grandTotal += Double.parseDouble(totalPrice);
        }

        String paymentMethod = rbtnCash.isSelected() ? "Cash" : "Card";

        if (rbtnCard.isSelected()) {
            double interest = grandTotal * 0.2;
            grandTotal += interest;
            receipt.append("\nCard Interest: +").append(String.format("%.2f", interest)).append(" gold\n");
        }

        receipt.append("--------------------------------------------------\n");
        receipt.append(String.format("Total: %.2f gold\n", grandTotal));
        receipt.append("Payment Method: ").append(paymentMethod).append("\n");
        receipt.append("Thank you for your purchase!\n");

        // Show formatted receipt in JOptionPane
        JOptionPane.showMessageDialog(this, receipt.toString(), "Receipt", JOptionPane.INFORMATION_MESSAGE);

        // **FIX for JList**: Split receipt into lines and add each line separately
        DefaultListModel<String> listModel = new DefaultListModel<>();
        String[] receiptLines = receipt.toString().split("\n");  // Split receipt into lines
        for (String line : receiptLines) {
            listModel.addElement(line);  // Add each line separately
        }
        jlistReceipt.setModel(listModel);  // Set JList model

        // Clear the cart after payment
        model.setRowCount(0);
    }

    private void btnEditCartActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnEditCartActionPerformed
        btnEditCart.setEnabled(false);
        btnPay.setEnabled(false);
        btnAddToCart.setEnabled(true);
        btnRemoveItem.setEnabled(true);
        btnClearCart.setEnabled(true);
        DefaultListModel<String> listModel = new DefaultListModel<>();
        listModel.clear();
        jlistReceipt.setModel(listModel);
    }//GEN-LAST:event_btnEditCartActionPerformed

    private void btnTotalPaymentActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnTotalPaymentActionPerformed
        DefaultTableModel model = (DefaultTableModel) jTable1.getModel();

        if (model.getRowCount() == 0) {
            JOptionPane.showMessageDialog(this, "Cart is empty!", "Warning", JOptionPane.WARNING_MESSAGE);
            return;
        }

        double grandTotal = 0;
        for (int i = 0; i < model.getRowCount(); i++) {
            Object value = model.getValueAt(i, 3); // Get total price from column 3

            double price;
            if (value instanceof Number) {
                price = ((Number) value).doubleValue(); // Convert Number to double
            } else {
                price = Double.parseDouble(value.toString()); // Convert String to double
            }

            grandTotal += price;
        }

        // Apply interest if Card payment is selected
        if (rbtnCard.isSelected()) {
            double interest = grandTotal * 0.2;
            grandTotal += interest;
        }

        JOptionPane.showMessageDialog(this, "Total Amount: " + grandTotal + " gold", "Total Payment", JOptionPane.INFORMATION_MESSAGE);
    }//GEN-LAST:event_btnTotalPaymentActionPerformed

    private void cmbItemSelectionActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cmbItemSelectionActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_cmbItemSelectionActionPerformed
    public static void main(String args[]) {
        java.awt.EventQueue.invokeLater(() -> {
            StoreFront MainFrame = new StoreFront();
            ArrayList<Product> products = new ArrayList<>(); // Example: Load actual products here
            new TransactionFrame(MainFrame, products).setVisible(true);
        });
    }
    /**
     * @param args the command line arguments
     */


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnAddToCart;
    private javax.swing.JButton btnClearCart;
    private javax.swing.JButton btnEditCart;
    private javax.swing.JButton btnPay;
    private javax.swing.JButton btnRemoveItem;
    private javax.swing.JButton btnReturnToFrontStore;
    private javax.swing.JButton btnTotalPayment;
    private javax.swing.ButtonGroup buttonGroup1;
    private javax.swing.JComboBox<String> cmbItemSelection;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTable jTable1;
    private javax.swing.JList<String> jlistReceipt;
    private javax.swing.JRadioButton rbtnCard;
    private javax.swing.JRadioButton rbtnCash;
    private javax.swing.JTextField txtfldQuantity;
    // End of variables declaration//GEN-END:variables
}
